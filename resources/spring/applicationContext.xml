<?xml version="1.0" encoding="UTF-8"?>
<!-- 注意"xsi:schemaLocation="中的顺序,否则会出错！！！！ -->
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/context	
    http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- 指定需要扫描的包 -->
    <context:component-scan base-package="cn.usts.*" />

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!--数据库驱动 -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<!--连接数据库的url -->
		<property name="url" value="${jdbc.url}" />
		<!--连接数据库的用户名 -->
		<property name="username" value="${jdbc.username}" />
		<!--连接数据库的密码 -->
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"></property>
	</bean>

    <!--
        不需要再SqlSession.getMapper了，而是把所有的MyBatisDao对象放入在Spring中
        下面Service中直接使用注解获取即可
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.usts.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

	<!-- 用于上传的静态资源可通过URL方式访问 -->
	<mvc:resources location="/upload/" mapping="/upload/**"/>
		
</beans>